// Code generated by automatic for 'gopkg.in/mgo.v2/bson'. DO NOT EDIT.

// +build go1.12,!go1.13

package stdlibs

import (
	"gopkg.in/mgo.v2/bson"
	"reflect"
)

func init() {
	Symbols["gopkg.in/mgo.v2/bson"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"IsObjectIdHex":       reflect.ValueOf(bson.IsObjectIdHex),
		"Marshal":             reflect.ValueOf(bson.Marshal),
		"MarshalJSON":         reflect.ValueOf(bson.MarshalJSON),
		"MaxKey":              reflect.ValueOf(&bson.MaxKey).Elem(),
		"MinKey":              reflect.ValueOf(&bson.MinKey).Elem(),
		"NewObjectId":         reflect.ValueOf(bson.NewObjectId),
		"NewObjectIdWithTime": reflect.ValueOf(bson.NewObjectIdWithTime),
		"Now":                 reflect.ValueOf(bson.Now),
		"ObjectIdHex":         reflect.ValueOf(bson.ObjectIdHex),
		"ParseDecimal128":     reflect.ValueOf(bson.ParseDecimal128),
		"SetZero":             reflect.ValueOf(&bson.SetZero).Elem(),
		"Undefined":           reflect.ValueOf(&bson.Undefined).Elem(),
		"Unmarshal":           reflect.ValueOf(bson.Unmarshal),
		"UnmarshalJSON":       reflect.ValueOf(bson.UnmarshalJSON),

		// type definitions
		"Binary":         reflect.ValueOf((*bson.Binary)(nil)),
		"D":              reflect.ValueOf((*bson.D)(nil)),
		"DBPointer":      reflect.ValueOf((*bson.DBPointer)(nil)),
		"Decimal128":     reflect.ValueOf((*bson.Decimal128)(nil)),
		"DocElem":        reflect.ValueOf((*bson.DocElem)(nil)),
		"Getter":         reflect.ValueOf((*bson.Getter)(nil)),
		"JavaScript":     reflect.ValueOf((*bson.JavaScript)(nil)),
		"M":              reflect.ValueOf((*bson.M)(nil)),
		"MongoTimestamp": reflect.ValueOf((*bson.MongoTimestamp)(nil)),
		"ObjectId":       reflect.ValueOf((*bson.ObjectId)(nil)),
		"Raw":            reflect.ValueOf((*bson.Raw)(nil)),
		"RawD":           reflect.ValueOf((*bson.RawD)(nil)),
		"RawDocElem":     reflect.ValueOf((*bson.RawDocElem)(nil)),
		"RegEx":          reflect.ValueOf((*bson.RegEx)(nil)),
		"Setter":         reflect.ValueOf((*bson.Setter)(nil)),
		"Symbol":         reflect.ValueOf((*bson.Symbol)(nil)),
		"TypeError":      reflect.ValueOf((*bson.TypeError)(nil)),

		// interface wrapper definitions
		"_Getter": reflect.ValueOf((*_gopkg_in_mgo_v2_bson_Getter)(nil)),
		"_Setter": reflect.ValueOf((*_gopkg_in_mgo_v2_bson_Setter)(nil)),
	}
}

// _gopkg_in_mgo_v2_bson_Getter is an interface wrapper for Getter type
type _gopkg_in_mgo_v2_bson_Getter struct {
	WGetBSON func() (interface{}, error)
}

func (W _gopkg_in_mgo_v2_bson_Getter) GetBSON() (interface{}, error) { return W.WGetBSON() }

// _gopkg_in_mgo_v2_bson_Setter is an interface wrapper for Setter type
type _gopkg_in_mgo_v2_bson_Setter struct {
	WSetBSON func(raw bson.Raw) error
}

func (W _gopkg_in_mgo_v2_bson_Setter) SetBSON(raw bson.Raw) error { return W.WSetBSON(raw) }
